package com.leo.crud.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.leo.crud.dto.TelefoneDTO;
import com.leo.crud.entities.Telefone;
import com.leo.crud.services.TelefoneService;

@RestController
@CrossOrigin
@RequestMapping("/telefones")
public class TelefoneController {
	
	@Autowired
	private TelefoneService service;
	
	@GetMapping
	public ResponseEntity<List<TelefoneDTO>> buscarTodosTelefones(){
		List<TelefoneDTO> dto = (List<TelefoneDTO>) service.buscarTodosTelefones();
		return ResponseEntity.status(200).body(dto);
		
	}
	
	@GetMapping(value = "/{id}")
	public ResponseEntity<TelefoneDTO> buscarTelefonePorId(@PathVariable Long id) {
		TelefoneDTO dto = service.buscarTelefonePorId(id);
		return ResponseEntity.status(200).body(dto);
	}
	
	@PostMapping
	public ResponseEntity<TelefoneDTO> salvarTelefone(@RequestBody Telefone tel) {
		Telefone obj = service.salvarTelefone(tel);
		TelefoneDTO dto = new TelefoneDTO(obj);
		return ResponseEntity.status(201).body(dto);
	}
	
	@PutMapping(value = "/{id}")
	public ResponseEntity<TelefoneDTO> atualizarTelefone(@RequestBody Telefone tel) {
		Telefone obj = service.salvarTelefone(tel);
		TelefoneDTO dto = new TelefoneDTO(obj);
		return ResponseEntity.status(200).body(dto);
	}
	
	@DeleteMapping
	public ResponseEntity<TelefoneDTO> excluirTelefone(@PathVariable Long id){
		Telefone obj = service.excluirTelefone(id);
		return ResponseEntity.status(204).body(new TelefoneDTO(obj));
	}

}
