package com.leo.crud.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.leo.crud.dto.CidadeDTO;
import com.leo.crud.entities.Cidade;
import com.leo.crud.services.CidadeService;

@RestController
@CrossOrigin
@RequestMapping("/cidades")
public class CidadeController {
	
	@Autowired
	private CidadeService service;
	
	@GetMapping
	public ResponseEntity<List<CidadeDTO>> buscarTodasCidades(){
		List<CidadeDTO> list = service.buscarTodasCidades();
		return ResponseEntity.status(200).body(list);
	}
	
	@GetMapping(value = "/{id}")
	public ResponseEntity<CidadeDTO> buscarCidadePorId(@PathVariable Long id){
		CidadeDTO dto = service.buscarCidadePorId(id);
		return ResponseEntity.status(200).body(dto);
	}
	
	@PostMapping
	public ResponseEntity<CidadeDTO> salvarCidade(@RequestBody Cidade cidade){
		Cidade obj = service.salvarCidade(cidade);
		CidadeDTO dto = new CidadeDTO(obj);
		return ResponseEntity.status(201).body(dto);
	}
	
	@PutMapping
	public ResponseEntity<CidadeDTO> atualizarCidade(@RequestBody Cidade cidade){
		Cidade obj = service.atualizarCidade(cidade);
		CidadeDTO dto = new CidadeDTO(obj);
		return ResponseEntity.status(200).body(dto);
	}
	
	@DeleteMapping(value = "/{id}")
	public ResponseEntity<CidadeDTO> excluirCidade(@PathVariable Long id){
		Cidade obj = service.ExcluirCidade(id);
		return ResponseEntity.status(204).body(new CidadeDTO(obj));
	}

}
